<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.cmmi.core.persistant.repository.account.UserMybatisDao">
	<!--
		获取用户: 输出直接映射到对象, user_name列要"as userName"以方便映射 
	-->
	<select id="get" parameterType="int" resultType="UserPO">
		select Id as userId, user_name as userName, user_email as userEmail,
		user_account as userAccount,permissions as permissions
		from ss_user
		where Id=#{userId}
	</select>

	<!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
	<select id="search" parameterType="map" resultType="UserPO">
		select Id as userId,user_name as userName, user_email as userEmail,
		user_account as userAccount,permissions as permissions,status as status
		from ss_user
		<where>
			<if test="userAccount != null">
				user_account=#{userAccount}
			</if>
			<if test="userName != null">
				and user_name=#{userName}
			</if>
		</where>
	</select>

	<!-- 插入用户: 1.由数据库生成id并赋值到user对象 2.输入用对象 -->
	<insert id="save" parameterType="UserPO" useGeneratedKeys="true" keyProperty="Id">
		insert into ss_user (
		user_name, user_account, user_pwd, salt, user_email,status,permissions)
		values (
		#{userName}, #{userAccount}, #{userPwd}, #{salt},#{userEmail},#{status},
		#{permissions})
	</insert>
	
	<!-- 删除用户 -->
	<delete id="delete" parameterType="int">
	     delete from ss_user where Id=#{userId}
	</delete>
</mapper> 
